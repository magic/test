import * as test from '../src/index.mjs'

const spec = {
  // check if spec can handle functions instead of strings to allow more complicated tests
  run: test.is.fn,
  curry: 'fn',
  http: [
    'obj',
    {
      get: 'fn'
    },
  ],
  env: [
    'obj',
    {
      isNodeProd: 'fn',
      isProd: 'fn',
      isVerbose: 'fn',
    },
  ],

  // @magic/log
  log: [
    'fn',
    {
      error: 'fn',
      log: 'fn',
      warn: 'fn',
      levels: [
        'obj',
        {
          0: 'str',
          1: 'str',
          2: 'str',
        },
      ],
      resetLevel: 'fn',
      level: 'num',
      getLevel: 'fn',
      setLevel: 'fn',
      info: 'fn',
      success: 'fn',
      annotate: 'fn',
      color: 'fn',
      paint: 'fn',
      time: 'fn',
      timeEnd: 'fn',
      hrtime: 'fn',
      timeTaken: 'fn',
    },
  ],
  mock: [
    'obj',
    {
      log: [
        'obj',
        {
          log: 'fn',
          warn: 'fn',
          error: 'fn',
          time: 'fn',
          timeEnd: 'fn',
        },
      ],
    },
  ],
  promise: 'fn',
  store: [
    'obj',
    {
      state: [
        'obj',
        {
          suites: ['object', {}],
          stats: ['object', { all: 'num', pass: 'num', fail: 'num' }],
          pkg: 'string',
        },
      ],
      set: 'fn',
      get: 'fn',
      reset: 'fn',
    },
  ],
  vals: [
    'obj',
    {
      array: 'array',
      true: 'bool',
      false: 'bool',
      truthy: 'string',
      falsy: 'number',
      nil: 'null',
      emptystr: 'string',
      emptyobject: ['object', {}],
      emptyarray: 'array',
      func: 'fn',
      number: 'num',
      num: 'num',
      float: 'float',
      int: 'int',
      object: ['object', { test: 'string' }],
      obj: ['object', { t: 'string' }],
      string: 'string',
      str: 'string',
      email: 'string',
      undefined: 'undefined',
      undef: 'undefined',
      date: 'date',
      time: 'number',
      error: 'error',
      err: 'error',
      rgb: 'rgb',
      rgba: 'rgba',
      hex3: 'hex3',
      hex6: 'hex6',
      hexa4: 'hexa4',
      hexa8: 'hexa8',
      regexp: 'regexp',
    },
  ],
  version: 'obj',
  tryCatch: 'fn',

  // '@magic/deep'
  deep: [
    'obj',
    {
      equal: 'fn',
      equals: 'fn',
      eq: 'fn',
      different: 'fn',
      diff: 'fn',
      flatten: 'fn',
      loop: 'fn',
      merge: 'fn',
    },
  ],

  // @magic/fs
  fs: [
    'obj',
    {
      appendFile: 'fn',
      appendFileSync: 'fn',
      access: 'fn',
      accessSync: 'fn',
      chown: 'fn',
      chownSync: 'fn',
      chmod: 'fn',
      chmodSync: 'fn',
      close: 'fn',
      closeSync: 'fn',
      copyFile: 'fn',
      copyFileSync: 'fn',
      cp: 'fn',
      cpSync: 'fn',
      createReadStream: 'fn',
      createWriteStream: 'fn',
      exists: 'fn',
      existsSync: 'fn',
      fchown: 'fn',
      fchownSync: 'fn',
      fchmod: 'fn',
      fchmodSync: 'fn',
      fdatasync: 'fn',
      fdatasyncSync: 'fn',
      fstat: 'fn',
      fstatSync: 'fn',
      fsync: 'fn',
      fsyncSync: 'fn',
      ftruncate: 'fn',
      ftruncateSync: 'fn',
      futimes: 'fn',
      futimesSync: 'fn',
      lchown: 'fn',
      lchownSync: 'fn',
      lchmod: 'fn',
      lchmodSync: 'undefined',
      link: 'fn',
      linkSync: 'fn',
      lstat: 'fn',
      lstatSync: 'fn',
      lutimes: 'fn',
      lutimesSync: 'fn',
      mkdir: 'fn',
      mkdirSync: 'fn',
      mkdtemp: 'fn',
      mkdtempSync: 'fn',
      open: 'fn',
      openSync: 'fn',
      opendir: 'fn',
      opendirSync: 'fn',
      readdir: 'fn',
      readdirSync: 'fn',
      read: 'fn',
      readSync: 'fn',
      readv: 'fn',
      readvSync: 'fn',
      readFile: 'fn',
      readFileSync: 'fn',
      readlink: 'fn',
      readlinkSync: 'fn',
      realpath: 'fn',
      realpathSync: 'fn',
      rename: 'fn',
      renameSync: 'fn',
      rm: 'fn',
      rmSync: 'fn',
      rmdir: 'fn',
      rmdirSync: 'fn',
      stat: 'fn',
      statSync: 'fn',
      symlink: 'fn',
      symlinkSync: 'fn',
      truncate: 'fn',
      truncateSync: 'fn',
      unwatchFile: 'fn',
      unlink: 'fn',
      unlinkSync: 'fn',
      utimes: 'fn',
      utimesSync: 'fn',
      watch: 'fn',
      watchFile: 'fn',
      writeFile: 'fn',
      writeFileSync: 'fn',
      write: 'fn',
      writeSync: 'fn',
      writev: 'fn',
      writevSync: 'fn',
      Dir: 'fn',
      Dirent: 'fn',
      Stats: 'fn',
      ReadStream: 'fn',
      WriteStream: 'fn',
      FileReadStream: 'fn',
      FileWriteStream: 'fn',
      _toUnixTimestamp: 'fn',
      F_OK: 'num',
      R_OK: 'num',
      W_OK: 'num',
      X_OK: 'num',
      constants: [
        'object',
        {
          UV_FS_SYMLINK_DIR: 'num',
          UV_FS_SYMLINK_JUNCTION: 'num',
          O_RDONLY: 'num',
          O_WRONLY: 'num',
          O_RDWR: 'num',
          UV_DIRENT_UNKNOWN: 'num',
          UV_DIRENT_FILE: 'num',
          UV_DIRENT_DIR: 'num',
          UV_DIRENT_LINK: 'num',
          UV_DIRENT_FIFO: 'num',
          UV_DIRENT_SOCKET: 'num',
          UV_DIRENT_CHAR: 'num',
          UV_DIRENT_BLOCK: 'num',
          S_IFMT: 'num',
          S_IFREG: 'num',
          S_IFDIR: 'num',
          S_IFCHR: 'num',
          S_IFBLK: 'num',
          S_IFIFO: 'num',
          S_IFLNK: 'num',
          S_IFSOCK: 'num',
          O_CREAT: 'num',
          O_EXCL: 'num',
          UV_FS_O_FILEMAP: 'num',
          O_NOCTTY: 'num',
          O_TRUNC: 'num',
          O_APPEND: 'num',
          O_DIRECTORY: 'num',
          O_NOATIME: 'num',
          O_NOFOLLOW: 'num',
          O_SYNC: 'num',
          O_DSYNC: 'num',
          O_DIRECT: 'num',
          O_NONBLOCK: 'num',
          S_IRWXU: 'num',
          S_IRUSR: 'num',
          S_IWUSR: 'num',
          S_IXUSR: 'num',
          S_IRWXG: 'num',
          S_IRGRP: 'num',
          S_IWGRP: 'num',
          S_IXGRP: 'num',
          S_IRWXO: 'num',
          S_IROTH: 'num',
          S_IWOTH: 'num',
          S_IXOTH: 'num',
          F_OK: 'num',
          R_OK: 'num',
          W_OK: 'num',
          X_OK: 'num',
          UV_FS_COPYFILE_EXCL: 'num',
          COPYFILE_EXCL: 'num',
          UV_FS_COPYFILE_FICLONE: 'num',
          COPYFILE_FICLONE: 'num',
          UV_FS_COPYFILE_FICLONE_FORCE: 'num',
          COPYFILE_FICLONE_FORCE: 'num',
        },
      ],
      promises: [
        'object',
        {
          access: 'fn',
          copyFile: 'fn',
          cp: 'fn',
          open: 'fn',
          opendir: 'fn',
          rename: 'fn',
          truncate: 'fn',
          rm: 'fn',
          rmdir: 'fn',
          mkdir: 'fn',
          readdir: 'fn',
          readlink: 'fn',
          symlink: 'fn',
          lstat: 'fn',
          stat: 'fn',
          link: 'fn',
          unlink: 'fn',
          chmod: 'fn',
          lchmod: 'fn',
          lchown: 'fn',
          chown: 'fn',
          utimes: 'fn',
          lutimes: 'fn',
          realpath: 'fn',
          mkdtemp: 'fn',
          writeFile: 'fn',
          appendFile: 'fn',
          readFile: 'fn',
          watch: 'fn',
        },
      ],
      readDir: 'fn',
      readfile: 'fn',
      rmDir: 'fn',
      mkdirp: 'fn',
      rmrf: 'fn',
      getFileType: 'fn',
      getDirectories: 'fn',
      getFiles: 'fn',
      getContentType: 'fn',
      getFilePath: 'fn',
    },
  ],

  // @magic/types
  is: [
    'obj',
    {
      deep: [
        'obj',
        {
          equal: 'fn',
          isEqual: 'fn',
          equals: 'fn',
          eq: 'fn',
          different: 'fn',
          isDifferent: 'fn',
          diff: 'fn',
          flatten: 'fn',
          loop: 'fn',
          merge: 'fn',
        },
      ],
      deepDiff: 'fn',
      deepDifferent: 'fn',
      deepEq: 'fn',
      deepEqual: 'fn',
      isDeepDifferent: 'fn',
      isDeepEqual: 'fn',
      count: 'fn',
      length: 'fn',
      len: 'fn',
      ln: 'fn',
      isError: 'fn',
      error: 'fn',
      err: 'fn',
      isIterable: 'fn',
      isIter: 'fn',
      iterable: 'fn',
      iter: 'fn',
      isEmail: 'fn',
      isMail: 'fn',
      email: 'fn',
      mail: 'fn',
      isNull: 'fn',
      isNil: 'fn',
      null: 'fn',
      nil: 'fn',
      isUndefinedOrNull: 'fn',
      undefinedOrNull: 'fn',
      undefinedOrNil: 'fn',
      undefOrNull: 'fn',
      undefOrNil: 'fn',
      isBuffer: 'fn',
      buffer: 'fn',
      buff: 'fn',
      isPromise: 'fn',
      promise: 'fn',
      isThenable: 'fn',
      isThen: 'fn',
      thenable: 'fn',
      then: 'fn',
      isUUID: 'fn',
      uuid: 'fn',
      isType: 'fn',
      testType: 'fn',
      type: 'fn',
      isTypes: 'fn',
      test: 'fn',
      types: 'fn',
      isEmpty: 'fn',
      empty: 'fn',
      isEqual: 'fn',
      isEq: 'fn',
      equal: 'fn',
      eq: 'fn',
      is: 'fn',
      isNot: 'fn',
      not: 'fn',
      isNeq: 'fn',
      neq: 'fn',
      isArray: 'fn',
      isArr: 'fn',
      arr: 'fn',
      array: 'fn',
      isBoolean: 'fn',
      isBool: 'fn',
      boolean: 'fn',
      bool: 'fn',
      isDefined: 'fn',
      isDef: 'fn',
      defined: 'fn',
      def: 'fn',
      isUndefined: 'fn',
      isUndef: 'fn',
      undefined: 'fn',
      undef: 'fn',
      isFunction: 'fn',
      isFunc: 'fn',
      isFn: 'fn',
      function: 'fn',
      func: 'fn',
      fn: 'fn',
      isAsyncFunction: 'fn',
      isAsyncFunc: 'fn',
      isAsyncFn: 'fn',
      asyncFunction: 'fn',
      asyncFunc: 'fn',
      asyncFn: 'fn',
      isGeneratorFunction: 'fn',
      isGeneratorFn: 'fn',
      isGeneratorFunc: 'fn',
      generator: 'fn',
      isGenerator: 'fn',
      generatorFn: 'fn',
      generatorFunc: 'fn',
      generatorFunction: 'fn',
      isNumber: 'fn',
      isNum: 'fn',
      number: 'fn',
      num: 'fn',
      isInteger: 'fn',
      isInt: 'fn',
      integer: 'fn',
      int: 'fn',
      isFloat: 'fn',
      float: 'fn',
      isObject: 'fn',
      isObj: 'fn',
      object: 'fn',
      obj: 'fn',
      isObjectNative: 'fn',
      objectNative: 'fn',
      isMergeableObject: 'fn',
      mergeableObject: 'fn',
      isMergeable: 'fn',
      mergeable: 'fn',
      isString: 'fn',
      isStr: 'fn',
      string: 'fn',
      str: 'fn',
      isRGBAObject: 'fn',
      isRGBA: 'fn',
      rgbaObject: 'fn',
      rgba: 'fn',
      isRGBObject: 'fn',
      isRGB: 'fn',
      rgbObject: 'fn',
      rgb: 'fn',
      isHexColor: 'fn',
      isHex: 'fn',
      hexColor: 'fn',
      hex: 'fn',
      isHexColor3: 'fn',
      isHex3: 'fn',
      hexColor3: 'fn',
      hex3: 'fn',
      isHexColor4: 'fn',
      isHex4: 'fn',
      hexColor4: 'fn',
      hex4: 'fn',
      isHexColor6: 'fn',
      isHex6: 'fn',
      hexColor6: 'fn',
      hex6: 'fn',
      isHexColor8: 'fn',
      isHex8: 'fn',
      hexColor8: 'fn',
      hex8: 'fn',
      isHexAlphaColor: 'fn',
      isHexa: 'fn',
      hexAlphaColor: 'fn',
      hexa: 'fn',
      isHexAlphaColor4: 'fn',
      isHexa4: 'fn',
      hexAlphaColor4: 'fn',
      hexa4: 'fn',
      isHexAlphaColor8: 'fn',
      isHexa8: 'fn',
      hexAlphaColor8: 'fn',
      hexa8: 'fn',
      isColor: 'fn',
      isCol: 'fn',
      color: 'fn',
      col: 'fn',
      isComparable: 'fn',
      Comparable: 'fn',
      comparable: 'fn',
      isDate: 'fn',
      isTime: 'fn',
      date: 'fn',
      time: 'fn',
      isRegExp: 'fn',
      isRegex: 'fn',
      regExp: 'fn',
      regexp: 'fn',
      regex: 'fn',
      isTruthy: 'fn',
      truthy: 'fn',
      isFalsy: 'fn',
      falsy: 'fn',
      isLengthGreater: 'fn',
      isLengthGreaterOrEqual: 'fn',
      isLengthSmaller: 'fn',
      isLengthSmallerOrEqual: 'fn',
      isLengthEqual: 'fn',
      isMap: 'fn',
      map: 'fn',
      isSet: 'fn',
      set: 'fn',
      isWeakMap: 'fn',
      weakMap: 'fn',
      isWeakSet: 'fn',
      weakSet: 'fn',
      every: 'fn',
      all: 'fn',
      some: 'fn',
      none: 'fn',
      instance: 'fn',
      instanceof: 'fn',
      instanceOf: 'fn',
      isCase: 'fn',
      case: 'fn',
      isUpperCase: 'fn',
      upperCase: 'fn',
      isLowerCase: 'fn',
      lowerCase: 'fn',
      same: 'fn',
      sameType: 'fn',
      isSame: 'fn',
      isSameType: 'fn',

      ownProp: 'fn',
      prop: 'fn',
      ownProperty: 'fn',
      isOwnProp: 'fn',
      isOwnProperty: 'fn',

      isModule: 'fn',
      module: 'fn',
    },
  ],

  isDev: 'bool',
  isProd: 'bool',
  isTest: 'bool',

  version: [
    'fn',
    {
      lib: 'fn',
      spec: 'fn',
      tests: [
        'obj',
        {
          lib: 'fn',
          spec: 'fn',
        },
      ],
    },
  ],

  // @magic/error
  error: 'fn',
}

const libTests = test.version({ ...test }, spec)

export default libTests
